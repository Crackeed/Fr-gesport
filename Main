import java.util.ArrayList;

import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.geometry.Rectangle2D;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.scene.text.Font;
import javafx.stage.Screen;
import javafx.stage.Stage;

public class Main extends Application {

	public static void main(String[] args) {launch(args);}

	static QuestionList easyQuestionList = new QuestionList();
	static QuestionList mediumQuestionList = new QuestionList();
	static QuestionList difficultQuestionList = new QuestionList();
	static QuestionList hardQuestionList = new QuestionList();
	static QuestionList veryhardQuestionList = new QuestionList();
	static QuestionList expertQuestionList = new QuestionList();
	static QuestionList impossibleQuestionList = new QuestionList();
	static QuestionList lolnopeQuestionList = new QuestionList();

	VBox vbMain = new VBox();
	HBox hbScore = new HBox();
	static GridPane gpAnswers = new GridPane();
	static int iRandom = 0;
	static Label empty1 = new Label("Empty");
	static Label empty2 = new Label("Empty");
	static Label empty3 = new Label("Empty");
	static Label empty4 = new Label("Empty");

	static int Score = 0;
	static int iDiff = 0;
	static String Difficulty = "Easy";
	static Label lbDifficulty = new Label(Difficulty);
	static Color DiffColour = Color.rgb(0, 255, 0);	
	static Label lbScore = new Label("Your score is: " + Score);

	static Label Question = new Label();
	Rectangle baQuestion = new Rectangle(500, 100);
	static StackPane spQuestion = new StackPane();

	Rectangle reHint = new Rectangle(180, 30);
	static Label lbBHint = new Label("Click here for a hint");
	static StackPane spHint = new StackPane();
	Label lbHint = new Label();

	Rectangle reRAnswer = new Rectangle(180, 30);
	static Label lbRAnswer = new Label();
	static StackPane spRAnswer = new StackPane();
	int ifClick = 0;

	Rectangle reWAnswer1 = new Rectangle(180, 30);
	static Label lbWAnswer1 = new Label();
	static StackPane spWAnswer1 = new StackPane();

	Rectangle reWAnswer2 = new Rectangle(180, 30);
	static Label lbWAnswer2 = new Label();
	static StackPane spWAnswer2 = new StackPane();

	Rectangle reWAnswer3 = new Rectangle(180, 30);
	static Label lbWAnswer3 = new Label();
	static StackPane spWAnswer3 = new StackPane();

	Rectangle reNextQuest = new Rectangle(500, 30);
	final Label lbNextQuest = new Label("Do you wish to proced to the next question");
	static StackPane spNextQuest = new StackPane();

	VBox vbWrong = new VBox();
	Label endScore = new Label();
	Label end = new Label();
	Button newgame = new Button("Play again?");

	public void start(Stage window) 
	{		
		addMediumQuestion("Fråga1", "Ja", "k", "Nej", "Okej", "XDDDDDDDDD");
		addMediumQuestion("Fråga2", "ja", "69", "ok", "420", "1337");
		
		lbRAnswer.setFont(Font.font("Stencil", 14));
		lbWAnswer1.setFont(Font.font("Stencil", 14));
		lbWAnswer2.setFont(Font.font("Stencil", 14));
		lbWAnswer3.setFont(Font.font("Stencil", 14));
		lbBHint.setFont(Font.font("Stencil", 14));
		lbScore.setFont(Font.font("Stencil", 16)); lbScore.setTextFill(Color.WHITE);
		lbDifficulty.setFont(Font.font("Stencil", 16)); lbDifficulty.setTextFill(DiffColour);
		Question.setFont(Font.font("Stencil", 20)); Question.setTextFill(Color.BLACK);
		lbNextQuest.setFont(Font.font("Stencil", 20)); 

		gpAnswers.setAlignment(Pos.CENTER);
		gpAnswers.setHgap(50);
		gpAnswers.setVgap(50);

		baQuestion.setFill(Color.LIGHTGRAY);
		reRAnswer.setFill(Color.LIGHTGRAY);
		reWAnswer1.setFill(Color.LIGHTGRAY);
		reWAnswer2.setFill(Color.LIGHTGRAY);
		reWAnswer3.setFill(Color.LIGHTGRAY);
		reHint.setFill(Color.LIGHTGRAY);
		reNextQuest.setFill(Color.LIGHTGRAY);

		spQuestion.getChildren().addAll(baQuestion, Question);
		spRAnswer.getChildren().addAll(reRAnswer, lbRAnswer);
		spWAnswer1.getChildren().addAll(reWAnswer1, lbWAnswer1);
		spWAnswer2.getChildren().addAll(reWAnswer2, lbWAnswer2);
		spWAnswer3.getChildren().addAll(reWAnswer3, lbWAnswer3);
		spHint.getChildren().addAll(reHint, lbBHint);
		spNextQuest.getChildren().addAll(reNextQuest, lbNextQuest); spNextQuest.setOpacity(0);

		hbScore.setAlignment(Pos.CENTER);
		hbScore.setSpacing(500);
		hbScore.getChildren().addAll(lbScore, lbDifficulty);

		vbMain.setBackground(null);
		vbMain.setAlignment(Pos.CENTER);
		vbMain.setSpacing(35);

		vbMain.getChildren().addAll(spQuestion, gpAnswers, spHint, spNextQuest, hbScore);
		Scene scMain = new Scene(vbMain, 1000, 680);
		scMain.setFill(Color.DARKBLUE);
		
		getNewQuestion();

		window.setScene(scMain);
		window.setResizable(false);
		Rectangle2D primaryScreenBounds = Screen.getPrimary().getVisualBounds();
		window.setX(primaryScreenBounds.getMinX());
		window.setY(primaryScreenBounds.getMinY());
		window.setWidth(primaryScreenBounds.getWidth());
		window.setHeight(primaryScreenBounds.getHeight());
		window.show();

		spRAnswer.setOnMouseClicked(e->
		{
			if(ifClick == 0)
			{
				ifClick++;
				Score++;
				lbScore.setText("Your score is: " + Score);
				
				if(Score % 5 == 0)
					iDiff++;
				
				if(iDiff == 1)
				{
					lbDifficulty.setText("Medium");
					DiffColour = Color.rgb(36, 219, 1);
					lbDifficulty.setTextFill(DiffColour);
				}
				if(iDiff == 2)
				{
					lbDifficulty.setText("Difficult");
					DiffColour = Color.rgb(73, 182, 2);
					lbDifficulty.setTextFill(DiffColour);
				}
				if(iDiff == 3)
				{
					lbDifficulty.setText("Hard");
					DiffColour = Color.rgb(109, 146, 3);
					lbDifficulty.setTextFill(DiffColour);
				}
				if(iDiff == 4)
				{
					lbDifficulty.setText("Very Hard");
					DiffColour = Color.rgb(146, 109, 4);
					lbDifficulty.setTextFill(DiffColour);
				}
				if(iDiff == 5)
				{
					lbDifficulty.setText("Expert");
					DiffColour = Color.rgb(182, 73, 5);
					lbDifficulty.setTextFill(DiffColour);
				}
				if(iDiff == 6)
				{
					lbDifficulty.setText("Impossible");
					DiffColour = Color.rgb(219, 36, 6);
					lbDifficulty.setTextFill(DiffColour);
				}
				if(iDiff == 7)
				{
					lbDifficulty.setText("LolNope");
					DiffColour = Color.rgb(255, 0, 7);
					lbDifficulty.setTextFill(DiffColour);
				}
					

				reRAnswer.setFill(Color.GREEN.brighter());
				reWAnswer1.setFill(Color.RED);
				reWAnswer2.setFill(Color.RED);
				reWAnswer3.setFill(Color.RED);

				java.awt.Toolkit.getDefaultToolkit().beep();

				spNextQuest.setOpacity(100);
			}
		});
		
		spHint.setOnMouseClicked(e->
		{
			lbBHint.setText(mediumQuestionList.getQuestion(iRandom).getHint());
		});
		
		spNextQuest.setOnMouseClicked(e->
		{
			ifClick = 0;
			spNextQuest.setOpacity(0);
			reRAnswer.setFill(Color.LIGHTGRAY);
			reWAnswer1.setFill(Color.LIGHTGRAY);
			reWAnswer2.setFill(Color.LIGHTGRAY);
			reWAnswer3.setFill(Color.LIGHTGRAY);
			
			getNewQuestion();
		});
	}

	private static void getNewQuestion()
	{		
		gpAnswers.getChildren().removeAll(spRAnswer, spWAnswer1, spWAnswer2, spWAnswer3);
		
		iRandom = (int) (Math.random() * mediumQuestionList.getLength());
		Question.setText(mediumQuestionList.getQuestion(iRandom).getQuestion());
		lbRAnswer.setText(mediumQuestionList.getQuestion(iRandom).getCorrectAnswer());
		lbWAnswer1.setText(mediumQuestionList.getQuestion(iRandom).getWrongAnswer1());
		lbWAnswer2.setText(mediumQuestionList.getQuestion(iRandom).getWrongAnswer2());
		lbWAnswer3.setText(mediumQuestionList.getQuestion(iRandom).getWrongAnswer3());
		lbBHint.setText("Click here for a hint");
		
		int iRAnswerpos = (int) (Math.random() * 4) + 1;
		System.out.println(iRAnswerpos + " posR");
		
		int iWAnswerpos1 = (int) (Math.random() * 4) + 1;
		while(iWAnswerpos1 == iRAnswerpos)
		{
			System.out.println(iWAnswerpos1 + " pos1");
			iWAnswerpos1 = (int) (Math.random() * 4) + 1;
		}
		
		int iWAnswerpos2 = (int) (Math.random() * 4) + 1;
		while(iWAnswerpos2 == iRAnswerpos || iWAnswerpos2 == iWAnswerpos1)
		{
			System.out.println(iWAnswerpos2 + " pos2");
			iWAnswerpos2 = (int) (Math.random() * 4) + 1;
		}
		
		int iWAnswerpos3 = (int) (Math.random() * 4) + 1;
		while(iWAnswerpos3 == iRAnswerpos || iWAnswerpos3 == iWAnswerpos1 || iWAnswerpos3 == iWAnswerpos2)
		{
			System.out.println(iWAnswerpos3 + " pos3");
			iWAnswerpos3 = (int) (Math.random() * 4) + 1;
		}
		
		if(iRAnswerpos == 1)
			gpAnswers.add(spRAnswer, 0, 0);
		if(iRAnswerpos == 2)
			gpAnswers.add(spRAnswer, 0, 1);
		if(iRAnswerpos == 3)
			gpAnswers.add(spRAnswer, 1, 0);
		if(iRAnswerpos == 4)
			gpAnswers.add(spRAnswer, 1, 1);
		
		if(iWAnswerpos1 == 1)
			gpAnswers.add(spWAnswer1, 0, 0);
		if(iWAnswerpos1 == 2)
			gpAnswers.add(spWAnswer1, 0, 1);
		if(iWAnswerpos1 == 3)
			gpAnswers.add(spWAnswer1, 1, 0);
		if(iWAnswerpos1 == 4)
			gpAnswers.add(spWAnswer1, 1, 1);
		
		if(iWAnswerpos2 == 1)
			gpAnswers.add(spWAnswer2, 0, 0);
		if(iWAnswerpos2 == 2)
			gpAnswers.add(spWAnswer2, 0, 1);
		if(iWAnswerpos2 == 3)
			gpAnswers.add(spWAnswer2, 1, 0);
		if(iWAnswerpos2 == 4)
			gpAnswers.add(spWAnswer2, 1, 1);
		
		if(iWAnswerpos3 == 1)
			gpAnswers.add(spWAnswer3, 0, 0);
		if(iWAnswerpos3 == 2)
			gpAnswers.add(spWAnswer3, 0, 1);
		if(iWAnswerpos3 == 3)
			gpAnswers.add(spWAnswer3, 1, 0);
		if(iWAnswerpos3 == 4)
			gpAnswers.add(spWAnswer3, 1, 1);
		
	}

	private void addEasyQuestion(String Question, String correctAnswer, String wrongAnswer1, String wrongAnswer2, String wrongAnswer3, String hint)
	{
		easyQuestionList.addQuestion(Question, correctAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, hint);
	}
	
	private void addMediumQuestion(String Question, String correctAnswer, String wrongAnswer1, String wrongAnswer2, String wrongAnswer3, String hint)
	{
		mediumQuestionList.addQuestion(Question, correctAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, hint);
	}
	
	private void addDifficultQuestion(String Question, String correctAnswer, String wrongAnswer1, String wrongAnswer2, String wrongAnswer3, String hint)
	{
		difficultQuestionList.addQuestion(Question, correctAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, hint);
	}
	
	private void addHardQuestion(String Question, String correctAnswer, String wrongAnswer1, String wrongAnswer2, String wrongAnswer3, String hint)
	{
		hardQuestionList.addQuestion(Question, correctAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, hint);
	}
	
	private void addVeryhardQuestion(String Question, String correctAnswer, String wrongAnswer1, String wrongAnswer2, String wrongAnswer3, String hint)
	{
		veryhardQuestionList.addQuestion(Question, correctAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, hint);
	}
	
	private void addExpertQuestion(String Question, String correctAnswer, String wrongAnswer1, String wrongAnswer2, String wrongAnswer3, String hint)
	{
		expertQuestionList.addQuestion(Question, correctAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, hint);
	}
	
	private void addImpossibleQuestion(String Question, String correctAnswer, String wrongAnswer1, String wrongAnswer2, String wrongAnswer3, String hint)
	{
		impossibleQuestionList.addQuestion(Question, correctAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, hint);
	}
	
	private void addLolnopeQuestion(String Question, String correctAnswer, String wrongAnswer1, String wrongAnswer2, String wrongAnswer3, String hint)
	{
		lolnopeQuestionList.addQuestion(Question, correctAnswer, wrongAnswer1, wrongAnswer2, wrongAnswer3, hint);
	}
}
